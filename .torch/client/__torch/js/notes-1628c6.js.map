{"version":3,"sources":["webpack:///../api/model.ts","webpack:///../api/index.ts","webpack:///../component/SEO.tsx","webpack:///../component/Header.tsx","webpack:///../component/Footer.tsx","webpack:///../component/Container.tsx","webpack:///../component/ThemeToggle.tsx","webpack:///../component/Link.tsx","webpack:///../component/NotFound.tsx","webpack:///../component/BackToTop.tsx","webpack:///../component/svg/Github.tsx","webpack:///../component/svg/Mail.tsx","webpack:///../hook/useSiteMeta.ts","webpack:///../hook/useTheme.ts","webpack:///../hook/usePaths.ts","webpack:///./Notes/View.tsx","webpack:///./Notes/index.tsx","webpack:///../share/createPage.tsx","webpack:///../store/index.ts"],"names":["apiPipeline","createApiPipelineWithUrl","api","input","invoke","path","fetchData","store","list","context","promises","forEach","push","fetchNotes","fetchTags","fetchPictures","fetchNote","Promise","all","catch","err","dispatch","type","payload","stack","message","then","res","notes","tags","pictures","name","note","SEO","metadata","useSelector","state","meta","Helmet","title","content","description","image","Header","paths","usePaths","history","useHistory","_paths","slice","tail","pop","className","map","href","key","onClick","event","preventDefault","aria-label","accessKey","Github","width","height","Mail","ThemeToggle","Footer","year","Date","getUTCFullYear","Container","children","useStore","getState","errors","length","notfound","NotFound","mode","toggle","useTheme","Link","style","blank","target","textAlign","fontSize","fontWeight","BackToTop","window","scrollTo","top","props","viewBox","d","ThemeMode","setMode","useState","Light","isFirst","setIsFirst","useEffect","getThemeMode","__setTheme","Dark","localStorage","getItem","__theme_key__","setPaths","NotesPage","tagTitle","Notes","displayNotes","NoteComponent","date","dayjs","Number","createTime","format","createPage","params","createStore","beforeCreate","side","__history","create","tagName","tag","find","filter","some","tagId","id","noopPage","Object","assign","createNoopStore","created","beforeDestory","destroyed","standardizePage","page","creater","cp","Layout","ssr","PageView","initialState","noteSet","language","author","displayPictures","reducer","action","value","concat","reduxStore","composeWithDevTools","__UNSAFE_SET_STATE__"],"mappings":"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","file":"js/notes-1628c6.js","sourcesContent":["/**\n * This file was generated by farrow-api\n * Don't modify it manually\n */\n\nimport { createApiPipelineWithUrl } from 'farrow-api-client'\n\n/**\n * {@label GetNoteInput}\n */\nexport type GetNoteInput = {\n  /**\n   * @remarks Note name\n   */\n  name: string\n}\n\n/**\n * {@label GetNoteSuccess}\n */\nexport type GetNoteSuccess = {\n  type: 'GetNoteSuccess'\n  /**\n   * @remarks Note content\n   */\n  note: string\n}\n\n/**\n * {@label NoteNotExist}\n */\nexport type NoteNotExist = {\n  type: 'NoteNotExist'\n  /**\n   * @remarks NoteNotExist message\n   */\n  message: string\n}\n\n/**\n * {@label NoteIsBroken}\n */\nexport type NoteIsBroken = {\n  type: 'NoteIsBroken'\n  /**\n   * @remarks NoteIsBroken message\n   */\n  message: string\n}\n\n/**\n * {@label SystemError}\n */\nexport type SystemError = {\n  type: 'SystemError'\n  /**\n   * @remarks SystemError message\n   */\n  message: string\n}\n\n/**\n * {@label GetNotesSuccess}\n */\nexport type GetNotesSuccess = {\n  type: 'GetNotesSuccess'\n  /**\n   * @remarks Note list\n   */\n  notes: Note[]\n}\n\n/**\n * {@label Note}\n */\nexport type Note = {\n  /**\n   * @remarks Note id\n   */\n  id: number\n  /**\n   * @remarks Note title\n   */\n  title: string\n  /**\n   * @remarks Note name\n   */\n  name: string\n  /**\n   * @remarks Note description\n   */\n  description: string\n  /**\n   * @remarks Note createTime\n   */\n  createTime: string\n  /**\n   * @remarks Note modifiedTime\n   */\n  modifiedTime: string\n  /**\n   * @remarks Note tags\n   */\n  tags: number[]\n  /**\n   * @remarks Note tip\n   */\n  tip: string\n}\n\n/**\n * {@label GetTagsSuccess}\n */\nexport type GetTagsSuccess = {\n  type: 'GetTagsSuccess'\n  /**\n   * @remarks tag list\n   */\n  tags: Tag[]\n}\n\n/**\n * {@label Tag}\n */\nexport type Tag = {\n  /**\n   * @remarks Tag id\n   */\n  id: number\n  /**\n   * @remarks Tag title\n   */\n  title: string\n  /**\n   * @remarks Tag name\n   */\n  name: string\n  /**\n   * @remarks Tag description\n   */\n  description: string\n}\n\n/**\n * {@label GetPicturesSuccess}\n */\nexport type GetPicturesSuccess = {\n  type: 'GetPicturesSuccess'\n  /**\n   * @remarks picture list\n   */\n  pictures: Record<string, Record<string, Picture[]>>\n}\n\n/**\n * {@label Picture}\n */\nexport type Picture = {\n  /**\n   * @remarks Picture id\n   */\n  id: number\n  /**\n   * @remarks Picture name\n   */\n  name: string\n  /**\n   * @remarks Picture location\n   */\n  location: string\n  /**\n   * @remarks Picture date\n   */\n  date: string\n  /**\n   * @remarks Picture url\n   */\n  url: string\n}\n\nexport const url = '/api'\n\nexport const apiPipeline = createApiPipelineWithUrl(url)\n\nexport const api = {\n  /**\n   * @remarks get note content\n   */\n  getNote: (input: GetNoteInput) =>\n    apiPipeline.invoke({ path: ['getNote'], input }) as Promise<\n      GetNoteSuccess | NoteNotExist | NoteIsBroken | SystemError\n    >,\n  /**\n   * @remarks get notes\n   */\n  getNotes: (input: {}) =>\n    apiPipeline.invoke({ path: ['getNotes'], input }) as Promise<\n      GetNotesSuccess | SystemError\n    >,\n  /**\n   * @remarks get tags\n   */\n  getTags: (input: {}) =>\n    apiPipeline.invoke({ path: ['getTags'], input }) as Promise<\n      GetTagsSuccess | SystemError\n    >,\n  /**\n   * @remarks get pictures\n   */\n  getPictures: (input: {}) =>\n    apiPipeline.invoke({ path: ['getPictures'], input }) as Promise<\n      GetPicturesSuccess | SystemError\n    >,\n}\n","import { api } from './model'\n\nimport type { Context } from 'react-torch'\nimport type { Store } from 'redux'\nimport type { State, Action } from 'client'\n\ntype Input = '/notes' | '/tags' | '/pictures' | string\n\nexport const fetchData = async (\n  store: Store<State, Action>,\n  list: Input[],\n  context: Context\n) => {\n  const promises: Promise<any>[] = []\n\n  list.forEach((input) => {\n    if (typeof input === 'string') {\n      if (input === '/notes') {\n        promises.push(fetchNotes(store))\n      } else if (input === '/tags') {\n        promises.push(fetchTags(store))\n      } else if (input === '/pictures') {\n        promises.push(fetchPictures(store))\n      } else {\n        promises.push(fetchNote(store, input))\n      }\n    }\n  })\n\n  return Promise.all(promises).catch((err) => {\n    store.dispatch({\n      type: 'SET_ERRORS',\n      payload: [err.stack || err.message],\n    })\n  })\n}\n\nconst fetchNotes = async (store: Store<State, Action>) => {\n  return api.getNotes({}).then((res) => {\n    switch (res.type) {\n      case 'GetNotesSuccess': {\n        store.dispatch({\n          type: 'SET_NOTES',\n          payload: res.notes,\n        })\n        break\n      }\n      case 'SystemError': {\n        store.dispatch({\n          type: 'SET_ERRORS',\n          payload: [res.message],\n        })\n        break\n      }\n    }\n  })\n}\n\nconst fetchTags = async (store: Store<State, Action>) => {\n  return api.getTags({}).then((res) => {\n    switch (res.type) {\n      case 'GetTagsSuccess': {\n        store.dispatch({\n          type: 'SET_TAGS',\n          payload: res.tags,\n        })\n        break\n      }\n      case 'SystemError': {\n        store.dispatch({\n          type: 'SET_ERRORS',\n          payload: [res.message],\n        })\n        break\n      }\n    }\n  })\n}\n\nconst fetchPictures = async (store: Store<State, Action>) => {\n  return api.getPictures({}).then((res) => {\n    switch (res.type) {\n      case 'GetPicturesSuccess': {\n        store.dispatch({\n          type: 'SET_PICTURES',\n          payload: res.pictures,\n        })\n        break\n      }\n      case 'SystemError': {\n        store.dispatch({\n          type: 'SET_ERRORS',\n          payload: [res.message],\n        })\n        break\n      }\n    }\n  })\n}\n\nconst fetchNote = async (store: Store<State, Action>, name: string) => {\n  return api.getNote({ name }).then((res) => {\n    switch (res.type) {\n      case 'GetNoteSuccess': {\n        store.dispatch({\n          type: 'SET_NOTE',\n          payload: [name, res.note],\n        })\n        break\n      }\n      case 'NoteIsBroken': {\n        store.dispatch({\n          type: 'SET_ERRORS',\n          payload: [res.message],\n        })\n        break\n      }\n      case 'NoteNotExist': {\n        store.dispatch({\n          type: 'SET_ERRORS',\n          payload: [res.message],\n        })\n        break\n      }\n      case 'SystemError': {\n        store.dispatch({\n          type: 'SET_ERRORS',\n          payload: [res.message],\n        })\n        break\n      }\n    }\n  })\n}\n","import React from 'react'\nimport { Helmet } from 'react-helmet'\nimport { useSelector } from 'react-redux'\nimport { State, MetaData } from 'client'\n\nexport const SEO = () => {\n  const metadata = useSelector<State, MetaData>((state) => state.meta)\n\n  return (\n    <Helmet>\n      <title>{metadata.title}</title>\n      <meta name=\"theme-color\" content={'#d84136'} />\n      <meta name=\"description\" content={metadata.description} />\n      <meta name=\"image\" content={metadata.image} />\n    </Helmet>\n  )\n}\n","import React from 'react'\nimport { useHistory } from 'react-torch/client'\nimport { usePaths } from '@src/hook'\nimport { ThemeToggle, Github, Mail } from './index'\n\nexport const Header = () => {\n  const [paths] = usePaths()\n  const history = useHistory()\n  const _paths = paths.slice()\n  const tail = _paths.pop()\n\n  return (\n    <header className=\"header\">\n      <div className=\"header-box\">\n        <nav className=\"nav\">\n          {_paths.map((path) => {\n            const [name, href] = path\n            const handleClick = (\n              event: React.MouseEvent<HTMLAnchorElement, MouseEvent>\n            ) => {\n              history.push(href)\n              event.preventDefault()\n            }\n            return (\n              <span key={name}>\n                <a className=\"link\" href={href} onClick={handleClick}>\n                  /&nbsp;{name}&nbsp;&nbsp;\n                </a>\n              </span>\n            )\n          })}\n          {tail && (\n            <span className=\"tail text\" key={tail[0]}>\n              <span>/</span>\n              &nbsp;\n              <span>{tail[0]}</span>\n            </span>\n          )}\n        </nav>\n        <div className=\"operation\">\n          <a\n            href=\"https://github.com/tqma113\"\n            className=\"github\"\n            aria-label=\"Github\"\n            accessKey=\"g\"\n          >\n            <Github width={25} height={25} className=\"icon\" />\n          </a>\n          <a\n            href=\"mailto:mtq1997@126.com\"\n            className=\"mail\"\n            aria-label=\"Github\"\n            accessKey=\"m\"\n          >\n            <Mail width={25} height={25} className=\"icon\" />\n          </a>\n          <ThemeToggle />\n        </div>\n      </div>\n    </header>\n  )\n}\n","import React from 'react'\n\nexport const Footer = () => {\n  const year = new Date().getUTCFullYear()\n  return <footer className=\"footer text\">© {year}</footer>\n}\n","import React from 'react'\nimport { useStore } from 'react-redux'\nimport { Header, Footer, NotFound } from './index'\nimport type { State, Action } from 'client'\n\nexport type ContainerProps = React.PropsWithChildren<{}>\n\nexport const Container = ({ children }: ContainerProps) => {\n  const state = useStore<State, Action>().getState()\n\n  if (state.errors.length > 0) children = <>{state.errors}</>\n  if (state.notfound) children = <NotFound />\n\n  return (\n    <div className=\"container\">\n      <Header />\n      <main className=\"main\">{children}</main>\n      <Footer />\n    </div>\n  )\n}\n","import React from 'react'\nimport { useTheme } from '@src/hook'\n\nexport const ThemeToggle = () => {\n  const [mode, toggle] = useTheme()\n  return (\n    <button className=\"theme-toggle\" onClick={toggle} aria-label=\"Theme Toggle\">\n      <div className={mode}></div>\n    </button>\n  )\n}\n","import React from 'react'\nimport { useHistory } from 'react-torch/client'\n\nexport type LinkProps = React.PropsWithChildren<{\n  href: string\n  className?: string\n  style?: React.CSSProperties\n  accessKey?: string\n  onClick?: (event: React.MouseEvent<HTMLAnchorElement, MouseEvent>) => void\n  blank?: true\n}>\n\nexport const Link = ({\n  href,\n  children,\n  style,\n  className,\n  onClick,\n  accessKey,\n  blank,\n}: LinkProps) => {\n  const history = useHistory()\n\n  const handleClick = (\n    event: React.MouseEvent<HTMLAnchorElement, MouseEvent>\n  ) => {\n    if (!blank) {\n      history.push(href)\n      event.preventDefault()\n    }\n  }\n\n  return (\n    <a\n      className={`link ${className || ''}`}\n      href={href}\n      onClick={onClick || handleClick}\n      style={style}\n      accessKey={accessKey}\n      target={blank ? '_blank' : ''}\n    >\n      {children}\n    </a>\n  )\n}\n","import React from 'react'\nimport { useHistory } from 'react-torch/client'\n\nexport const NotFound = () => {\n  const history = useHistory()\n\n  const handleClick = (\n    event: React.MouseEvent<HTMLAnchorElement, MouseEvent>\n  ) => {\n    history.push('/')\n    event.preventDefault()\n  }\n\n  return (\n    <div style={{ textAlign: 'center' }}>\n      <h1 style={{ fontSize: '32px', fontWeight: 650 }}>Page not found</h1>\n      <h1 style={{ fontSize: '100px', fontWeight: 650 }}>404</h1>\n      <p>\n        Back to{' '}\n        <a className=\"link\" href=\"/\" onClick={handleClick}>\n          Homepage\n        </a>\n        .\n      </p>\n    </div>\n  )\n}\n","import React from 'react'\nimport { Link } from './index'\n\nexport const BackToTop = () => {\n  const handleClick = (\n    event: React.MouseEvent<HTMLAnchorElement, MouseEvent>\n  ) => {\n    window.scrollTo({ top: 0 })\n    event.preventDefault()\n  }\n\n  return (\n    <div className=\"back-to-top\">\n      <Link href=\"#top\" onClick={handleClick}>\n        ⇪ Back to top\n      </Link>\n    </div>\n  )\n}\n","import React from 'react'\n\nexport const Github = (props: React.SVGProps<SVGSVGElement>) => {\n  return (\n    <svg viewBox=\"0 0 24 24\" width=\"1em\" height=\"1em\" {...props}>\n      <path d=\"M12 .297c-6.63 0-12 5.373-12 12 0 5.303 3.438 9.8 8.205 11.385.6.113.82-.258.82-.577 0-.285-.01-1.04-.015-2.04-3.338.724-4.042-1.61-4.042-1.61C4.422 18.07 3.633 17.7 3.633 17.7c-1.087-.744.084-.729.084-.729 1.205.084 1.838 1.236 1.838 1.236 1.07 1.835 2.809 1.305 3.495.998.108-.776.417-1.305.76-1.605-2.665-.3-5.466-1.332-5.466-5.93 0-1.31.465-2.38 1.235-3.22-.135-.303-.54-1.523.105-3.176 0 0 1.005-.322 3.3 1.23.96-.267 1.98-.399 3-.405 1.02.006 2.04.138 3 .405 2.28-1.552 3.285-1.23 3.285-1.23.645 1.653.24 2.873.12 3.176.765.84 1.23 1.91 1.23 3.22 0 4.61-2.805 5.625-5.475 5.92.42.36.81 1.096.81 2.22 0 1.606-.015 2.896-.015 3.286 0 .315.21.69.825.57C20.565 22.092 24 17.592 24 12.297c0-6.627-5.373-12-12-12\" />\n    </svg>\n  )\n}\n","import React from 'react'\n\nexport const Mail = (props: React.SVGProps<SVGSVGElement>) => {\n  return (\n    <svg viewBox=\"64 64 896 896\" {...props}>\n      <path d=\"M928 160H96c-17.7 0-32 14.3-32 32v640c0 17.7 14.3 32 32 32h832c17.7 0 32-14.3 32-32V192c0-17.7-14.3-32-32-32zm-80.8 108.9L531.7 514.4c-7.8 6.1-18.7 6.1-26.5 0L189.6 268.9A7.2 7.2 0 01194 256h648.8a7.2 7.2 0 014.4 12.9z\" />\n    </svg>\n  )\n}\n","import { useState } from 'react'\nimport { useHistory } from 'react-torch/client'\n\ntype MetaData = {\n  title: string\n  description: string\n  language: string\n  image: string\n  author: string\n}\n\nconst defaultData: MetaData = {\n  title: 'Ma Tianqi(@tqma) - Software Engineer',\n  description: \"Ma Tianqi's personal website.\",\n  image: 'icons/icon-192x192.png',\n  language: 'en',\n  author: 'Ma Tianqi',\n}\n\nexport const useSiteMeta = () => {\n  const history = useHistory()\n  const [data, setData] = useState({\n    ...defaultData,\n    url: history.createHref(history.location),\n  })\n\n  const setMetaData = (_data: Partial<MetaData>) => {\n    setData({\n      ...data,\n      url: history.createHref(history.location),\n      ..._data,\n    })\n  }\n\n  return [data, setMetaData] as const\n}\n","import { useState, useEffect } from 'react'\n\nexport enum ThemeMode {\n  Dark = 'dark',\n  Light = 'light',\n}\n\nexport const useTheme = () => {\n  const [mode, setMode] = useState(ThemeMode.Light)\n  const [isFirst, setIsFirst] = useState(true)\n\n  useEffect(() => {\n    setMode(getThemeMode())\n    setIsFirst(false)\n  }, [])\n\n  useEffect(() => {\n    if (!isFirst && mode !== getThemeMode()) {\n      window.__setTheme(mode)\n    }\n  }, [mode])\n\n  const toggle = () => {\n    if (mode === ThemeMode.Light) {\n      setMode(ThemeMode.Dark)\n    } else {\n      setMode(ThemeMode.Light)\n    }\n  }\n\n  return [mode, toggle] as const\n}\n\nconst getThemeMode = (): ThemeMode => {\n  return localStorage.getItem(window.__theme_key__) === 'dark'\n    ? ThemeMode.Dark\n    : ThemeMode.Light\n}\n","export type Path = [string, string]\n\nlet paths: Path[] = []\nconst setPaths = (_paths: Path[]) => {\n  paths = _paths.slice()\n}\nexport const usePaths = (_paths?: Path[]) => {\n  if (_paths) {\n    paths = _paths.slice()\n  }\n  return [paths, setPaths] as const\n}\n","import React, { useEffect } from 'react'\nimport { useSelector, useStore } from 'react-redux'\nimport dayjs from 'dayjs'\nimport { Link } from '@src/component'\nimport type { State, Action } from 'client'\nimport type { Note } from 'type'\n\nimport './style.less'\n\nexport type NotesPageProps = {\n  tagTitle?: string\n}\n\nexport default function NotesPage({ tagTitle }: NotesPageProps) {\n  const store = useStore<State, Action>()\n  useEffect(() => {\n    if (tagTitle) {\n      store.dispatch({\n        type: 'SET_META_DATA',\n        payload: {\n          title: `${tagTitle} | Notes by Ma Tianqi`,\n        },\n      })\n    } else {\n      store.dispatch({\n        type: 'SET_META_DATA',\n        payload: {\n          title: 'Notes by Ma Tianqi',\n        },\n      })\n    }\n  }, [])\n\n  return (\n    <div className=\"notes\">\n      <div className=\"title-container\">\n        <h1 className=\"title\">Notes</h1>\n        <div className=\"link-container\">\n          <Link href=\"/notes/tags\" className=\"link-with-underline\">\n            View all tags\n          </Link>\n        </div>\n      </div>\n      <Notes />\n    </div>\n  )\n}\n\nfunction Notes() {\n  const notes = useSelector<State, Note[]>((state) => state.displayNotes)\n\n  if (notes.length === 0) return <>Stay tuned...</>\n\n  return (\n    <section className=\"note-list-container\">\n      <ul className=\"note-list\">\n        {notes.map((note) => (\n          <NoteComponent key={note.name} note={note} />\n        ))}\n      </ul>\n    </section>\n  )\n}\n\nexport type NoteProps = {\n  note: Note\n}\n\nfunction NoteComponent({ note }: NoteProps) {\n  const date = dayjs(Number(note.createTime)).format('MMMM D, YYYY')\n\n  return (\n    <li className=\"note\">\n      <div className=\"note-title-container\">\n        <Link href={`/notes/${note.name}`}>\n          <p className=\"note-title\">{note.title}</p>\n        </Link>\n      </div>\n      <div className=\"note-time-container\">\n        <time>{date}</time>\n      </div>\n      <p className=\"note-description\">{note.description}</p>\n    </li>\n  )\n}\n","import React from 'react'\nimport { usePaths } from '@src/hook'\nimport { createPage } from '@src/share'\nimport { fetchData } from '@src/api'\nimport createStore from '@src/store'\nimport View from './View'\n\nexport default createPage(async ({ params, context, history }) => {\n  const store = createStore()\n\n  const beforeCreate = async () => {\n    await fetchData(store, ['/notes', '/tags'], context)\n  }\n\n  if (context.side === 'client')\n    // @ts-ignore\n    window.__history = history\n\n  const create = () => {\n    const state = store.getState()\n\n    if (params?.tagName) {\n      const tag = state.tags.find((tag) => tag.name === params.tagName)\n      if (tag) {\n        const displayNotes = state.notes.filter((note) =>\n          note.tags.some((tagId) => tag.id === tagId)\n        )\n        store.dispatch({ type: 'SET_DISPLAY_NOTES', payload: displayNotes })\n\n        usePaths([\n          ['me', '/'],\n          ['notes', '/notes'],\n          ['tags', '/notes/tags'],\n          [tag.name, `/notes/tags/${tag.name}`],\n        ])\n\n        return () => <View tagTitle={tag.title} />\n      } else {\n        store.dispatch({ type: 'SET_NOT_FOUND', payload: true })\n        usePaths([['me', '/']])\n      }\n    } else {\n      usePaths([\n        ['me', '/'],\n        ['notes', '/notes'],\n      ])\n    }\n\n    return () => <View />\n  }\n\n  return { store, beforeCreate, create }\n})\n","import React from 'react'\nimport { createPage as cp, createNoopStore } from 'react-torch/client'\nimport { createStore } from 'redux'\nimport { Provider } from 'react-redux'\nimport { SEO, Container } from '../component'\nimport type {\n  StoreLike,\n  PageView,\n  CreaterProps,\n  PageCreater,\n} from 'react-torch/client'\nimport type { Store } from 'redux'\nimport type { Location } from 'torch-history'\n\nexport type LayoutProps = React.PropsWithChildren<{}>\n\nexport type BasePage = {\n  store?: Store<any, any> & StoreLike<any>\n\n  beforeCreate?: () => Promise<void> | void\n  create: () => Promise<PageView> | PageView\n  created?: () => Promise<void> | void\n  beforeDestory?: (nextLocation: Location) => Promise<void> | void\n  destroyed?: (nextLocation: Location) => Promise<void> | void\n}\n\nexport type Page = PageView | BasePage\n\nexport type StandardPage = Required<BasePage>\n\nexport type Creater = (props: CreaterProps) => Page | Promise<Page>\n\nconst noopStore = Object.assign(\n  createStore(() => {}),\n  createNoopStore()\n)\n\nconst noopPage = {\n  store: noopStore,\n  beforeCreate: () => {},\n  created: () => {},\n  beforeDestory: () => {},\n  destroyed: () => {},\n}\n\nconst standardizePage = (page: Page): StandardPage => {\n  if (isFunction(page)) {\n    return {\n      ...noopPage,\n      create: async () => page,\n    }\n  } else {\n    return {\n      ...noopPage,\n      ...page,\n    }\n  }\n}\n\nexport const createPage = (creater: Creater): PageCreater => {\n  return cp(async (props) => {\n    const {\n      store,\n      beforeCreate,\n      create,\n      beforeDestory,\n      destroyed,\n    } = standardizePage(await creater(props))\n\n    const Layout = ({ children }: LayoutProps) => {\n      return (\n        <Provider store={store}>\n          <SEO />\n          <Container>{children}</Container>\n        </Provider>\n      )\n    }\n\n    return {\n      store,\n      beforeCreate: () => {\n        if (!props.context.ssr) {\n          // @ts-ignore\n          store.dispatch({ type: 'SET_NOT_FOUND', payload: false })\n        }\n\n        return beforeCreate()\n      },\n      create: async () => {\n        const PageView = await create()\n        return () => (\n          <Layout>\n            <PageView />\n          </Layout>\n        )\n      },\n      beforeDestory,\n      destroyed,\n    }\n  })\n}\n\nfunction isFunction<Args, R, S>(\n  input: ((args: Args) => R) | S\n): input is (args: Args) => R {\n  return input && typeof input === 'function'\n}\n","import { createStore } from 'redux'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport type { Note, Tag, Picture } from 'type'\n\nexport type MetaData = {\n  title: string\n  description: string\n  language: string\n  image: string\n  author: string\n}\n\nexport type State = {\n  errors: string[]\n  notes: Note[]\n  displayNotes: Note[]\n  tags: Tag[]\n  noteSet: Record<string, string>\n  notfound: boolean\n  meta: MetaData\n  pictures: Record<string, Record<string, Picture[]>>\n  displayPictures: Record<string, Record<string, Picture[]>>\n}\n\nconst initialState: State = {\n  errors: [],\n  notes: [],\n  displayNotes: [],\n  tags: [],\n  noteSet: {},\n  notfound: false,\n  meta: {\n    title: 'Ma Tianqi(@tqma) - Software Engineer',\n    description: \"Ma Tianqi's personal website.\",\n    image: 'icons/icon-192x192.png',\n    language: 'en',\n    author: 'Ma Tianqi',\n  },\n  pictures: {},\n  displayPictures: {},\n}\n\nconst UNSAFE_SETSTATE = 'UNSAFE_SETSTATE'\n\nconst SET_TAGS = 'SET_TAGS'\nconst SET_PICTURES = 'SET_PICTURES'\nconst SET_DISPLAY_PICTURES = 'SET_DISPLAY_PICTURES'\nconst SET_NOTES = 'SET_NOTES'\nconst SET_NOTE = 'SET_NOTE'\nconst SET_ERRORS = 'SET_ERRORS'\nconst SET_NOT_FOUND = 'SET_NOT_FOUND'\nconst SET_DISPLAY_NOTES = 'SET_DISPLAY_NOTES'\nconst SET_META_DATA = 'SET_META_DATA'\n\ntype UNSAFE_SETSTATE_ACTION = {\n  type: typeof UNSAFE_SETSTATE\n  payload: State\n}\n\ntype SET_TAGS_ACTION = {\n  type: typeof SET_TAGS\n  payload: Tag[]\n}\n\ntype SET_PICTURES_ACTION = {\n  type: typeof SET_PICTURES\n  payload: Record<string, Record<string, Picture[]>>\n}\n\ntype SET_DISPLAY_PICTURES_ACTION = {\n  type: typeof SET_DISPLAY_PICTURES\n  payload: Record<string, Record<string, Picture[]>>\n}\n\ntype SET_NOTES_ACTION = {\n  type: typeof SET_NOTES\n  payload: Note[]\n}\n\ntype SET_NOTE_ACTION = {\n  type: typeof SET_NOTE\n  payload: [string, string]\n}\n\ntype SET_ERRORS_ACTION = {\n  type: typeof SET_ERRORS\n  payload: string[]\n}\n\ntype SET_NOT_FOUND_ACTION = {\n  type: typeof SET_NOT_FOUND\n  payload: boolean\n}\n\ntype SET_DISPLAY_NOTES_ACTION = {\n  type: typeof SET_DISPLAY_NOTES\n  payload: Note[]\n}\n\ntype SET_META_DATA_ACTION = {\n  type: typeof SET_META_DATA\n  payload: Partial<MetaData>\n}\n\nexport type Action =\n  | UNSAFE_SETSTATE_ACTION\n  | SET_TAGS_ACTION\n  | SET_PICTURES_ACTION\n  | SET_DISPLAY_PICTURES_ACTION\n  | SET_NOTE_ACTION\n  | SET_NOTES_ACTION\n  | SET_ERRORS_ACTION\n  | SET_NOT_FOUND_ACTION\n  | SET_DISPLAY_NOTES_ACTION\n  | SET_META_DATA_ACTION\n\nconst reducer = (state: State = initialState, action: Action): State => {\n  switch (action.type) {\n    case 'UNSAFE_SETSTATE': {\n      return action.payload\n    }\n    case 'SET_TAGS': {\n      return {\n        ...state,\n        tags: action.payload,\n      }\n    }\n    case 'SET_PICTURES': {\n      return {\n        ...state,\n        pictures: action.payload,\n      }\n    }\n    case 'SET_DISPLAY_PICTURES': {\n      return {\n        ...state,\n        displayPictures: action.payload,\n      }\n    }\n    case 'SET_NOTE': {\n      const [key, value] = action.payload\n      return {\n        ...state,\n        noteSet: {\n          ...state.noteSet,\n          [key]: value,\n        },\n      }\n    }\n    case 'SET_NOTES': {\n      return {\n        ...state,\n        displayNotes: action.payload,\n        notes: action.payload,\n      }\n    }\n    case 'SET_ERRORS': {\n      return {\n        ...state,\n        errors: state.errors.concat(action.payload),\n      }\n    }\n    case 'SET_NOT_FOUND': {\n      return {\n        ...state,\n        notfound: action.payload,\n      }\n    }\n    case 'SET_DISPLAY_NOTES': {\n      return {\n        ...state,\n        displayNotes: action.payload,\n      }\n    }\n    case 'SET_META_DATA': {\n      return {\n        ...state,\n        meta: {\n          ...state.meta,\n          ...action.payload,\n        },\n      }\n    }\n  }\n\n  return state\n}\n\nexport default function () {\n  const reduxStore = createStore(reducer, initialState, composeWithDevTools())\n  return Object.assign(reduxStore, {\n    __UNSAFE_SET_STATE__(state: State) {\n      reduxStore.dispatch({ type: UNSAFE_SETSTATE, payload: state })\n    },\n  })\n}\n"],"sourceRoot":""}