{"version":3,"sources":["webpack:///./Tags/View.tsx","webpack:///./Tags/index.tsx"],"names":["TagsPage","store","useStore","useEffect","dispatch","type","payload","title","className","href","Tags","tags","notes","getState","tagsData","useMemo","map","tag","count","reduce","note","some","tagId","id","length","TagComponent","key","name","createPage","history","params","context","usePaths","createStore","beforeCreate","fetchData","create"],"mappings":"22BAYe,SAASA,IACtB,IAAMC,GAAQC,gBAWd,OATAC,gBAAU,KACRF,EAAMG,SAAS,CACbC,KAAM,gBACNC,QAAS,CACPC,MAAO,qCAGV,IAGD,yBAAKC,UAAU,QACb,yBAAKA,UAAU,mBACb,wBAAIA,UAAU,SAAd,QACA,yBAAKA,UAAU,kBACb,kBAAC,KAAD,CAAMC,KAAK,SAASD,UAAU,uBAA9B,oBAKJ,kBAACE,EAAD,OAKN,SAASA,IACP,IAAMT,GAAQC,iBACR,KAAES,EAAF,MAAQC,GAAUX,EAAMY,WAExBC,GAA2BC,cAAQ,IAChCJ,EAAKK,KAAKC,GACf,OACKA,GADL,IAEEC,MAAON,EAAMO,QAAO,CAACD,EAAOE,IACnBA,EAAKT,KAAKU,MAAMC,GAAUA,IAAUL,EAAIM,KAAML,EAAQ,EAAIA,GAChE,QAGN,CAACP,EAAMC,IAEV,OACE,6BAASJ,UAAU,kBAChBM,EAASU,OAAS,EACjB,wBAAIhB,UAAU,YACXM,EAASE,KAAKC,GACN,kBAACQ,EAAD,CAAcC,IAAKT,EAAIU,KAAMV,IAAKA,OAI7C,iBAUR,SAASQ,EAAT,GAAkD,IAA5B,IAAER,GAA0B,EAChD,OACE,4BACE,kBAAC,KAAD,CAAMR,KAAI,sBAAiBQ,EAAIU,OAASV,EAAIV,OAC5C,0BAAMC,UAAU,aAAhB,IAA8BS,EAAIC,MAAlC,M,4TCvEN,SAAeU,OAAU,oBAAC,aAAwC,IAAjC,QAAEC,EAAF,OAAWC,EAAX,QAAmBC,GAAc,GAChEC,QAAS,CACP,CAAC,KAAM,KACP,CAAC,QAAS,UACV,CAAC,OAAQ,iBAGX,IAAM/B,GAAQgC,SAQd,MAAO,CAAEhC,QAAOiC,aANE,oBAAG,kBACbC,OAAUlC,EAAO,CAAC,QAAS,UAAW8B,MAD5B,qDAMYK,OAFf,IAAM1B,MAbE","file":"tags.js","sourcesContent":["import React, { useMemo, useEffect } from 'react'\nimport { useStore } from 'react-redux'\nimport { Link } from '@src/component'\nimport type { State, Action } from '@src/store'\nimport type { Tag } from 'type'\n\nimport './index.less'\n\nexport type TagWithcount = Tag & {\n  count: number\n}\n\nexport default function TagsPage() {\n  const store = useStore<State, Action>()\n\n  useEffect(() => {\n    store.dispatch({\n      type: 'SET_META_DATA',\n      payload: {\n        title: 'All tags | Notes by Ma Tianqi',\n      },\n    })\n  }, [])\n\n  return (\n    <div className=\"tags\">\n      <div className=\"title-container\">\n        <h1 className=\"title\">Tags</h1>\n        <div className=\"link-container\">\n          <Link href=\"/notes\" className=\"link-with-underline\">\n            View all notes\n          </Link>\n        </div>\n      </div>\n      <Tags />\n    </div>\n  )\n}\n\nfunction Tags() {\n  const store = useStore<State, Action>()\n  const { tags, notes } = store.getState()\n\n  const tagsData: TagWithcount[] = useMemo(() => {\n    return tags.map((tag) => {\n      return {\n        ...tag,\n        count: notes.reduce((count, note) => {\n          return note.tags.some((tagId) => tagId === tag.id) ? count + 1 : count\n        }, 0),\n      }\n    })\n  }, [tags, notes])\n\n  return (\n    <section className=\"tags-container\">\n      {tagsData.length > 0 ? (\n        <ul className=\"tag-list\">\n          {tagsData.map((tag) => {\n            return <TagComponent key={tag.name} tag={tag} />\n          })}\n        </ul>\n      ) : (\n        'Stay tuned...'\n      )}\n    </section>\n  )\n}\n\nexport type TagComponentProps = {\n  tag: TagWithcount\n}\n\nfunction TagComponent({ tag }: TagComponentProps) {\n  return (\n    <li>\n      <Link href={`/notes/tags/${tag.name}`}>{tag.title}</Link>\n      <span className=\"tag-count\">({tag.count})</span>\n    </li>\n  )\n}\n","import { createPage } from '@src/share'\nimport { usePaths } from '@src/hook'\nimport { fetchData } from '@src/api'\nimport createStore from '@src/store'\nimport Tags from './View'\n\nexport default createPage(async ({ history, params, context }) => {\n  usePaths([\n    ['me', '/'],\n    ['notes', '/notes'],\n    ['tags', '/notes/tags'],\n  ])\n\n  const store = createStore()\n\n  const beforeCreate = async () => {\n    await fetchData(store, ['/tags', '/notes'], context)\n  }\n\n  const create = () => Tags\n\n  return { store, beforeCreate, create }\n})\n"],"sourceRoot":""}