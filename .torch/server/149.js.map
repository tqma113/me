{"version":3,"sources":["webpack:///../api/model.ts","webpack:///../api/index.ts","webpack:///../component/SEO.tsx","webpack:///../component/Header.tsx","webpack:///../component/Footer.tsx","webpack:///../component/Container.tsx","webpack:///../component/ThemeToggle.tsx","webpack:///../component/Link.tsx","webpack:///../component/NotFound.tsx","webpack:///../component/BackToTop.tsx","webpack:///../component/svg/Github.tsx","webpack:///../component/svg/Mail.tsx","webpack:///../hook/useTheme.ts","webpack:///../hook/usePaths.ts","webpack:///../share/createPage.tsx","webpack:///../store/index.ts"],"names":["apiPipeline","createApiPipelineWithUrl","fetchData","store","list","context","promises","forEach","input","push","fetchNotes","fetchTags","fetchPictures","fetchNote","Promise","all","catch","err","dispatch","type","payload","stack","message","invoke","path","then","res","notes","tags","pictures","name","note","SEO","metadata","useSelector","state","meta","Helmet","title","content","description","image","Header","paths","usePaths","history","useHistory","_paths","slice","tail","pop","className","map","href","key","onClick","event","preventDefault","aria-label","accessKey","Github","width","height","Mail","ThemeToggle","Footer","year","Date","getUTCFullYear","Container","children","useStore","getState","errors","length","notfound","NotFound","mode","toggle","useTheme","Link","style","blank","target","textAlign","fontSize","fontWeight","BackToTop","window","scrollTo","top","props","viewBox","d","ThemeMode","setMode","useState","Light","isFirst","setIsFirst","useEffect","getThemeMode","__setTheme","Dark","localStorage","getItem","__theme_key__","setPaths","noopPage","Object","assign","createStore","createNoopStore","beforeCreate","created","beforeDestory","destroyed","standardizePage","page","create","createPage","creater","cp","Layout","Provider","ssr","PageView","initialState","displayNotes","noteSet","language","author","displayPictures","reducer","action","value","concat","reduxStore","composeWithDevTools","__UNSAFE_SET_STATE__"],"mappings":"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","file":"149.js","sourcesContent":["/**\n * This file was generated by farrow-api\n * Don't modify it manually\n */\n\nimport { createApiPipelineWithUrl } from 'farrow-api-client'\n\n/**\n * {@label GetNoteInput}\n */\nexport type GetNoteInput = {\n  /**\n   * @remarks Note name\n   */\n  name: string\n}\n\n/**\n * {@label GetNoteSuccess}\n */\nexport type GetNoteSuccess = {\n  type: 'GetNoteSuccess'\n  /**\n   * @remarks Note content\n   */\n  note: string\n}\n\n/**\n * {@label NoteNotExist}\n */\nexport type NoteNotExist = {\n  type: 'NoteNotExist'\n  /**\n   * @remarks NoteNotExist message\n   */\n  message: string\n}\n\n/**\n * {@label NoteIsBroken}\n */\nexport type NoteIsBroken = {\n  type: 'NoteIsBroken'\n  /**\n   * @remarks NoteIsBroken message\n   */\n  message: string\n}\n\n/**\n * {@label SystemError}\n */\nexport type SystemError = {\n  type: 'SystemError'\n  /**\n   * @remarks SystemError message\n   */\n  message: string\n}\n\n/**\n * {@label GetNotesSuccess}\n */\nexport type GetNotesSuccess = {\n  type: 'GetNotesSuccess'\n  /**\n   * @remarks Note list\n   */\n  notes: Note[]\n}\n\n/**\n * {@label Note}\n */\nexport type Note = {\n  /**\n   * @remarks Note id\n   */\n  id: number\n  /**\n   * @remarks Note title\n   */\n  title: string\n  /**\n   * @remarks Note name\n   */\n  name: string\n  /**\n   * @remarks Note description\n   */\n  description: string\n  /**\n   * @remarks Note createTime\n   */\n  createTime: string\n  /**\n   * @remarks Note modifiedTime\n   */\n  modifiedTime: string\n  /**\n   * @remarks Note tags\n   */\n  tags: number[]\n  /**\n   * @remarks Note tip\n   */\n  tip: string\n}\n\n/**\n * {@label GetTagsSuccess}\n */\nexport type GetTagsSuccess = {\n  type: 'GetTagsSuccess'\n  /**\n   * @remarks tag list\n   */\n  tags: Tag[]\n}\n\n/**\n * {@label Tag}\n */\nexport type Tag = {\n  /**\n   * @remarks Tag id\n   */\n  id: number\n  /**\n   * @remarks Tag title\n   */\n  title: string\n  /**\n   * @remarks Tag name\n   */\n  name: string\n  /**\n   * @remarks Tag description\n   */\n  description: string\n}\n\n/**\n * {@label GetPicturesSuccess}\n */\nexport type GetPicturesSuccess = {\n  type: 'GetPicturesSuccess'\n  /**\n   * @remarks picture list\n   */\n  pictures: Record<string, Record<string, Picture[]>>\n}\n\n/**\n * {@label Picture}\n */\nexport type Picture = {\n  /**\n   * @remarks Picture id\n   */\n  id: number\n  /**\n   * @remarks Picture name\n   */\n  name: string\n  /**\n   * @remarks Picture location\n   */\n  location: string\n  /**\n   * @remarks Picture date\n   */\n  date: string\n  /**\n   * @remarks Picture url\n   */\n  url: string\n}\n\nexport const url = '/api'\n\nexport const apiPipeline = createApiPipelineWithUrl(url)\n\nexport const api = {\n  /**\n   * @remarks get note content\n   */\n  getNote: (input: GetNoteInput) =>\n    apiPipeline.invoke({ path: ['getNote'], input }) as Promise<\n      GetNoteSuccess | NoteNotExist | NoteIsBroken | SystemError\n    >,\n  /**\n   * @remarks get notes\n   */\n  getNotes: (input: {}) =>\n    apiPipeline.invoke({ path: ['getNotes'], input }) as Promise<\n      GetNotesSuccess | SystemError\n    >,\n  /**\n   * @remarks get tags\n   */\n  getTags: (input: {}) =>\n    apiPipeline.invoke({ path: ['getTags'], input }) as Promise<\n      GetTagsSuccess | SystemError\n    >,\n  /**\n   * @remarks get pictures\n   */\n  getPictures: (input: {}) =>\n    apiPipeline.invoke({ path: ['getPictures'], input }) as Promise<\n      GetPicturesSuccess | SystemError\n    >,\n}\n","import { api } from './model'\n\nimport type { Context } from 'react-torch'\nimport type { Store } from 'redux'\nimport type { State, Action } from 'client'\n\ntype Input = '/notes' | '/tags' | '/pictures' | string\n\nexport const fetchData = async (\n  store: Store<State, Action>,\n  list: Input[],\n  context: Context\n) => {\n  const promises: Promise<any>[] = []\n\n  list.forEach((input) => {\n    if (typeof input === 'string') {\n      if (input === '/notes') {\n        promises.push(fetchNotes(store))\n      } else if (input === '/tags') {\n        promises.push(fetchTags(store))\n      } else if (input === '/pictures') {\n        promises.push(fetchPictures(store))\n      } else {\n        promises.push(fetchNote(store, input))\n      }\n    }\n  })\n\n  return Promise.all(promises).catch((err) => {\n    store.dispatch({\n      type: 'SET_ERRORS',\n      payload: [err.stack || err.message],\n    })\n  })\n}\n\nconst fetchNotes = async (store: Store<State, Action>) => {\n  return api.getNotes({}).then((res) => {\n    switch (res.type) {\n      case 'GetNotesSuccess': {\n        store.dispatch({\n          type: 'SET_NOTES',\n          payload: res.notes,\n        })\n        break\n      }\n      case 'SystemError': {\n        store.dispatch({\n          type: 'SET_ERRORS',\n          payload: [res.message],\n        })\n        break\n      }\n    }\n  })\n}\n\nconst fetchTags = async (store: Store<State, Action>) => {\n  return api.getTags({}).then((res) => {\n    switch (res.type) {\n      case 'GetTagsSuccess': {\n        store.dispatch({\n          type: 'SET_TAGS',\n          payload: res.tags,\n        })\n        break\n      }\n      case 'SystemError': {\n        store.dispatch({\n          type: 'SET_ERRORS',\n          payload: [res.message],\n        })\n        break\n      }\n    }\n  })\n}\n\nconst fetchPictures = async (store: Store<State, Action>) => {\n  return api.getPictures({}).then((res) => {\n    switch (res.type) {\n      case 'GetPicturesSuccess': {\n        store.dispatch({\n          type: 'SET_PICTURES',\n          payload: res.pictures,\n        })\n        break\n      }\n      case 'SystemError': {\n        store.dispatch({\n          type: 'SET_ERRORS',\n          payload: [res.message],\n        })\n        break\n      }\n    }\n  })\n}\n\nconst fetchNote = async (store: Store<State, Action>, name: string) => {\n  return api.getNote({ name }).then((res) => {\n    switch (res.type) {\n      case 'GetNoteSuccess': {\n        store.dispatch({\n          type: 'SET_NOTE',\n          payload: [name, res.note],\n        })\n        break\n      }\n      case 'NoteIsBroken': {\n        store.dispatch({\n          type: 'SET_ERRORS',\n          payload: [res.message],\n        })\n        break\n      }\n      case 'NoteNotExist': {\n        store.dispatch({\n          type: 'SET_ERRORS',\n          payload: [res.message],\n        })\n        break\n      }\n      case 'SystemError': {\n        store.dispatch({\n          type: 'SET_ERRORS',\n          payload: [res.message],\n        })\n        break\n      }\n    }\n  })\n}\n","import React from 'react'\nimport { Helmet } from 'react-helmet'\nimport { useSelector } from 'react-redux'\nimport { State, MetaData } from 'client'\n\nexport const SEO = () => {\n  const metadata = useSelector<State, MetaData>((state) => state.meta)\n\n  return (\n    <Helmet>\n      <title>{metadata.title}</title>\n      <meta name=\"theme-color\" content={'#d84136'} />\n      <meta name=\"description\" content={metadata.description} />\n      <meta name=\"image\" content={metadata.image} />\n    </Helmet>\n  )\n}\n","import React from 'react'\nimport { useHistory } from 'react-torch/client'\nimport { usePaths } from '@src/hook'\nimport { ThemeToggle, Github, Mail } from './index'\n\nexport const Header = () => {\n  const [paths] = usePaths()\n  const history = useHistory()\n  const _paths = paths.slice()\n  const tail = _paths.pop()\n\n  return (\n    <header className=\"header\">\n      <div className=\"header-box\">\n        <nav className=\"nav\">\n          {_paths.map((path) => {\n            const [name, href] = path\n            const handleClick = (\n              event: React.MouseEvent<HTMLAnchorElement, MouseEvent>\n            ) => {\n              history.push(href)\n              event.preventDefault()\n            }\n            return (\n              <span key={name}>\n                <a className=\"link\" href={href} onClick={handleClick}>\n                  /&nbsp;{name}&nbsp;&nbsp;\n                </a>\n              </span>\n            )\n          })}\n          {tail && (\n            <span className=\"tail text\" key={tail[0]}>\n              <span>/</span>\n              &nbsp;\n              <span>{tail[0]}</span>\n            </span>\n          )}\n        </nav>\n        <div className=\"operation\">\n          <a\n            href=\"https://github.com/tqma113\"\n            className=\"github\"\n            aria-label=\"Github\"\n            accessKey=\"g\"\n          >\n            <Github width={25} height={25} className=\"icon\" />\n          </a>\n          <a\n            href=\"mailto:mtq1997@126.com\"\n            className=\"mail\"\n            aria-label=\"Github\"\n            accessKey=\"m\"\n          >\n            <Mail width={25} height={25} className=\"icon\" />\n          </a>\n          <ThemeToggle />\n        </div>\n      </div>\n    </header>\n  )\n}\n","import React from 'react'\n\nexport const Footer = () => {\n  const year = new Date().getUTCFullYear()\n  return <footer className=\"footer text\">© {year}</footer>\n}\n","import React from 'react'\nimport { useStore } from 'react-redux'\nimport { Header, Footer, NotFound } from './index'\nimport type { State, Action } from 'client'\n\nexport type ContainerProps = React.PropsWithChildren<{}>\n\nexport const Container = ({ children }: ContainerProps) => {\n  const state = useStore<State, Action>().getState()\n\n  if (state.errors.length > 0) children = <>{state.errors}</>\n  if (state.notfound) children = <NotFound />\n\n  return (\n    <div className=\"container\">\n      <Header />\n      <main className=\"main\">{children}</main>\n      <Footer />\n    </div>\n  )\n}\n","import React from 'react'\nimport { useTheme } from '@src/hook'\n\nexport const ThemeToggle = () => {\n  const [mode, toggle] = useTheme()\n  return (\n    <button className=\"theme-toggle\" onClick={toggle} aria-label=\"Theme Toggle\">\n      <div className={mode}></div>\n    </button>\n  )\n}\n","import React from 'react'\nimport { useHistory } from 'react-torch/client'\n\nexport type LinkProps = React.PropsWithChildren<{\n  href: string\n  className?: string\n  style?: React.CSSProperties\n  accessKey?: string\n  onClick?: (event: React.MouseEvent<HTMLAnchorElement, MouseEvent>) => void\n  blank?: true\n}>\n\nexport const Link = ({\n  href,\n  children,\n  style,\n  className,\n  onClick,\n  accessKey,\n  blank,\n}: LinkProps) => {\n  const history = useHistory()\n\n  const handleClick = (\n    event: React.MouseEvent<HTMLAnchorElement, MouseEvent>\n  ) => {\n    if (!blank) {\n      history.push(href)\n      event.preventDefault()\n    }\n  }\n\n  return (\n    <a\n      className={`link ${className || ''}`}\n      href={href}\n      onClick={onClick || handleClick}\n      style={style}\n      accessKey={accessKey}\n      target={blank ? '_blank' : ''}\n    >\n      {children}\n    </a>\n  )\n}\n","import React from 'react'\nimport { useHistory } from 'react-torch/client'\n\nexport const NotFound = () => {\n  const history = useHistory()\n\n  const handleClick = (\n    event: React.MouseEvent<HTMLAnchorElement, MouseEvent>\n  ) => {\n    history.push('/')\n    event.preventDefault()\n  }\n\n  return (\n    <div style={{ textAlign: 'center' }}>\n      <h1 style={{ fontSize: '32px', fontWeight: 650 }}>Page not found</h1>\n      <h1 style={{ fontSize: '100px', fontWeight: 650 }}>404</h1>\n      <p>\n        Back to{' '}\n        <a className=\"link\" href=\"/\" onClick={handleClick}>\n          Homepage\n        </a>\n        .\n      </p>\n    </div>\n  )\n}\n","import React from 'react'\nimport { Link } from './index'\n\nexport const BackToTop = () => {\n  const handleClick = (\n    event: React.MouseEvent<HTMLAnchorElement, MouseEvent>\n  ) => {\n    window.scrollTo({ top: 0 })\n    event.preventDefault()\n  }\n\n  return (\n    <div className=\"back-to-top\">\n      <Link href=\"#top\" onClick={handleClick}>\n        ⇪ Back to top\n      </Link>\n    </div>\n  )\n}\n","import React from 'react'\n\nexport const Github = (props: React.SVGProps<SVGSVGElement>) => {\n  return (\n    <svg viewBox=\"0 0 24 24\" width=\"1em\" height=\"1em\" {...props}>\n      <path d=\"M12 .297c-6.63 0-12 5.373-12 12 0 5.303 3.438 9.8 8.205 11.385.6.113.82-.258.82-.577 0-.285-.01-1.04-.015-2.04-3.338.724-4.042-1.61-4.042-1.61C4.422 18.07 3.633 17.7 3.633 17.7c-1.087-.744.084-.729.084-.729 1.205.084 1.838 1.236 1.838 1.236 1.07 1.835 2.809 1.305 3.495.998.108-.776.417-1.305.76-1.605-2.665-.3-5.466-1.332-5.466-5.93 0-1.31.465-2.38 1.235-3.22-.135-.303-.54-1.523.105-3.176 0 0 1.005-.322 3.3 1.23.96-.267 1.98-.399 3-.405 1.02.006 2.04.138 3 .405 2.28-1.552 3.285-1.23 3.285-1.23.645 1.653.24 2.873.12 3.176.765.84 1.23 1.91 1.23 3.22 0 4.61-2.805 5.625-5.475 5.92.42.36.81 1.096.81 2.22 0 1.606-.015 2.896-.015 3.286 0 .315.21.69.825.57C20.565 22.092 24 17.592 24 12.297c0-6.627-5.373-12-12-12\" />\n    </svg>\n  )\n}\n","import React from 'react'\n\nexport const Mail = (props: React.SVGProps<SVGSVGElement>) => {\n  return (\n    <svg viewBox=\"64 64 896 896\" {...props}>\n      <path d=\"M928 160H96c-17.7 0-32 14.3-32 32v640c0 17.7 14.3 32 32 32h832c17.7 0 32-14.3 32-32V192c0-17.7-14.3-32-32-32zm-80.8 108.9L531.7 514.4c-7.8 6.1-18.7 6.1-26.5 0L189.6 268.9A7.2 7.2 0 01194 256h648.8a7.2 7.2 0 014.4 12.9z\" />\n    </svg>\n  )\n}\n","import { useState, useEffect } from 'react'\n\nexport enum ThemeMode {\n  Dark = 'dark',\n  Light = 'light',\n}\n\nexport const useTheme = () => {\n  const [mode, setMode] = useState(ThemeMode.Light)\n  const [isFirst, setIsFirst] = useState(true)\n\n  useEffect(() => {\n    setMode(getThemeMode())\n    setIsFirst(false)\n  }, [])\n\n  useEffect(() => {\n    if (!isFirst && mode !== getThemeMode()) {\n      window.__setTheme(mode)\n    }\n  }, [mode])\n\n  const toggle = () => {\n    if (mode === ThemeMode.Light) {\n      setMode(ThemeMode.Dark)\n    } else {\n      setMode(ThemeMode.Light)\n    }\n  }\n\n  return [mode, toggle] as const\n}\n\nconst getThemeMode = (): ThemeMode => {\n  return localStorage.getItem(window.__theme_key__) === 'dark'\n    ? ThemeMode.Dark\n    : ThemeMode.Light\n}\n","export type Path = [string, string]\n\nlet paths: Path[] = []\nconst setPaths = (_paths: Path[]) => {\n  paths = _paths.slice()\n}\nexport const usePaths = (_paths?: Path[]) => {\n  if (_paths) {\n    paths = _paths.slice()\n  }\n  return [paths, setPaths] as const\n}\n","import React from 'react'\nimport { createPage as cp, createNoopStore } from 'react-torch/client'\nimport { createStore } from 'redux'\nimport { Provider } from 'react-redux'\nimport { SEO, Container } from '../component'\nimport type {\n  StoreLike,\n  PageView,\n  CreaterProps,\n  PageCreater,\n} from 'react-torch/client'\nimport type { Store } from 'redux'\nimport type { Location } from 'torch-history'\n\nexport type LayoutProps = React.PropsWithChildren<{}>\n\nexport type BasePage = {\n  store?: Store<any, any> & StoreLike<any>\n\n  beforeCreate?: () => Promise<void> | void\n  create: () => Promise<PageView> | PageView\n  created?: () => Promise<void> | void\n  beforeDestory?: (nextLocation: Location) => Promise<void> | void\n  destroyed?: (nextLocation: Location) => Promise<void> | void\n}\n\nexport type Page = PageView | BasePage\n\nexport type StandardPage = Required<BasePage>\n\nexport type Creater = (props: CreaterProps) => Page | Promise<Page>\n\nconst noopStore = Object.assign(\n  createStore(() => {}),\n  createNoopStore()\n)\n\nconst noopPage = {\n  store: noopStore,\n  beforeCreate: () => {},\n  created: () => {},\n  beforeDestory: () => {},\n  destroyed: () => {},\n}\n\nconst standardizePage = (page: Page): StandardPage => {\n  if (isFunction(page)) {\n    return {\n      ...noopPage,\n      create: async () => page,\n    }\n  } else {\n    return {\n      ...noopPage,\n      ...page,\n    }\n  }\n}\n\nexport const createPage = (creater: Creater): PageCreater => {\n  return cp(async (props) => {\n    const {\n      store,\n      beforeCreate,\n      create,\n      beforeDestory,\n      destroyed,\n    } = standardizePage(await creater(props))\n\n    const Layout = ({ children }: LayoutProps) => {\n      return (\n        <Provider store={store}>\n          <SEO />\n          <Container>{children}</Container>\n        </Provider>\n      )\n    }\n\n    return {\n      store,\n      beforeCreate: () => {\n        if (!props.context.ssr) {\n          // @ts-ignore\n          store.dispatch({ type: 'SET_NOT_FOUND', payload: false })\n        }\n\n        return beforeCreate()\n      },\n      create: async () => {\n        const PageView = await create()\n        return () => (\n          <Layout>\n            <PageView />\n          </Layout>\n        )\n      },\n      beforeDestory,\n      destroyed,\n    }\n  })\n}\n\nfunction isFunction<Args, R, S>(\n  input: ((args: Args) => R) | S\n): input is (args: Args) => R {\n  return input && typeof input === 'function'\n}\n","import { createStore } from 'redux'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport type { Note, Tag, Picture } from 'type'\n\nexport type MetaData = {\n  title: string\n  description: string\n  language: string\n  image: string\n  author: string\n}\n\nexport type State = {\n  errors: string[]\n  notes: Note[]\n  displayNotes: Note[]\n  tags: Tag[]\n  noteSet: Record<string, string>\n  notfound: boolean\n  meta: MetaData\n  pictures: Record<string, Record<string, Picture[]>>\n  displayPictures: Record<string, Record<string, Picture[]>>\n}\n\nconst initialState: State = {\n  errors: [],\n  notes: [],\n  displayNotes: [],\n  tags: [],\n  noteSet: {},\n  notfound: false,\n  meta: {\n    title: 'Ma Tianqi(@tqma) - Software Engineer',\n    description: \"Ma Tianqi's personal website.\",\n    image: 'icons/icon-192x192.png',\n    language: 'en',\n    author: 'Ma Tianqi',\n  },\n  pictures: {},\n  displayPictures: {},\n}\n\nconst UNSAFE_SETSTATE = 'UNSAFE_SETSTATE'\n\nconst SET_TAGS = 'SET_TAGS'\nconst SET_PICTURES = 'SET_PICTURES'\nconst SET_DISPLAY_PICTURES = 'SET_DISPLAY_PICTURES'\nconst SET_NOTES = 'SET_NOTES'\nconst SET_NOTE = 'SET_NOTE'\nconst SET_ERRORS = 'SET_ERRORS'\nconst SET_NOT_FOUND = 'SET_NOT_FOUND'\nconst SET_DISPLAY_NOTES = 'SET_DISPLAY_NOTES'\nconst SET_META_DATA = 'SET_META_DATA'\n\ntype UNSAFE_SETSTATE_ACTION = {\n  type: typeof UNSAFE_SETSTATE\n  payload: State\n}\n\ntype SET_TAGS_ACTION = {\n  type: typeof SET_TAGS\n  payload: Tag[]\n}\n\ntype SET_PICTURES_ACTION = {\n  type: typeof SET_PICTURES\n  payload: Record<string, Record<string, Picture[]>>\n}\n\ntype SET_DISPLAY_PICTURES_ACTION = {\n  type: typeof SET_DISPLAY_PICTURES\n  payload: Record<string, Record<string, Picture[]>>\n}\n\ntype SET_NOTES_ACTION = {\n  type: typeof SET_NOTES\n  payload: Note[]\n}\n\ntype SET_NOTE_ACTION = {\n  type: typeof SET_NOTE\n  payload: [string, string]\n}\n\ntype SET_ERRORS_ACTION = {\n  type: typeof SET_ERRORS\n  payload: string[]\n}\n\ntype SET_NOT_FOUND_ACTION = {\n  type: typeof SET_NOT_FOUND\n  payload: boolean\n}\n\ntype SET_DISPLAY_NOTES_ACTION = {\n  type: typeof SET_DISPLAY_NOTES\n  payload: Note[]\n}\n\ntype SET_META_DATA_ACTION = {\n  type: typeof SET_META_DATA\n  payload: Partial<MetaData>\n}\n\nexport type Action =\n  | UNSAFE_SETSTATE_ACTION\n  | SET_TAGS_ACTION\n  | SET_PICTURES_ACTION\n  | SET_DISPLAY_PICTURES_ACTION\n  | SET_NOTE_ACTION\n  | SET_NOTES_ACTION\n  | SET_ERRORS_ACTION\n  | SET_NOT_FOUND_ACTION\n  | SET_DISPLAY_NOTES_ACTION\n  | SET_META_DATA_ACTION\n\nconst reducer = (state: State = initialState, action: Action): State => {\n  switch (action.type) {\n    case 'UNSAFE_SETSTATE': {\n      return action.payload\n    }\n    case 'SET_TAGS': {\n      return {\n        ...state,\n        tags: action.payload,\n      }\n    }\n    case 'SET_PICTURES': {\n      return {\n        ...state,\n        pictures: action.payload,\n      }\n    }\n    case 'SET_DISPLAY_PICTURES': {\n      return {\n        ...state,\n        displayPictures: action.payload,\n      }\n    }\n    case 'SET_NOTE': {\n      const [key, value] = action.payload\n      return {\n        ...state,\n        noteSet: {\n          ...state.noteSet,\n          [key]: value,\n        },\n      }\n    }\n    case 'SET_NOTES': {\n      return {\n        ...state,\n        displayNotes: action.payload,\n        notes: action.payload,\n      }\n    }\n    case 'SET_ERRORS': {\n      return {\n        ...state,\n        errors: state.errors.concat(action.payload),\n      }\n    }\n    case 'SET_NOT_FOUND': {\n      return {\n        ...state,\n        notfound: action.payload,\n      }\n    }\n    case 'SET_DISPLAY_NOTES': {\n      return {\n        ...state,\n        displayNotes: action.payload,\n      }\n    }\n    case 'SET_META_DATA': {\n      return {\n        ...state,\n        meta: {\n          ...state.meta,\n          ...action.payload,\n        },\n      }\n    }\n  }\n\n  return state\n}\n\nexport default function () {\n  const reduxStore = createStore(reducer, initialState, composeWithDevTools())\n  return Object.assign(reduxStore, {\n    __UNSAFE_SET_STATE__(state: State) {\n      reduxStore.dispatch({ type: UNSAFE_SETSTATE, payload: state })\n    },\n  })\n}\n"],"sourceRoot":""}