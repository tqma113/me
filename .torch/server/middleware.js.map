{"version":3,"sources":["webpack:///../node_modules/path-to-regexp/dist.es2015/index.js","webpack:///../node_modules/torch-router/dist/index.js","webpack:///webpack/bootstrap","webpack:///webpack/runtime/define property getters","webpack:///webpack/runtime/hasOwnProperty shorthand","webpack:///webpack/runtime/make namespace object","webpack:///external \"react-torch\"","webpack:///../middleware/attachStatic.ts","webpack:///../middleware/assets.ts"],"names":["parse","str","options","tokens","i","length","char","push","type","index","value","count","pattern","j","TypeError","name","code","charCodeAt","lexer","_a","prefixes","defaultPattern","escapeString","delimiter","result","key","path","tryConsume","mustConsume","undefined","nextType","consumeText","prefix","indexOf","suffix","modifier","name_1","pattern_1","compile","tokensToFunction","reFlags","flags","encode","x","_b","validate","matches","map","token","RegExp","data","optional","repeat","Array","isArray","segment","test","typeOfMessage","String","match","keys","regexpToFunction","pathToRegexp","re","decode","pathname","m","exec","params","Object","create","_loop_1","split","replace","sensitive","tokensToRegexp","strict","start","_c","end","_d","endsWith","route","_i","tokens_1","mod","endToken","isEndDelimited","groupsRegex","execResult","source","regexpToRegexp","paths","parts","join","arrayToRegexp","stringToRegexp","exports","createRouter","path_to_regexp_1","createRoute","finalRoute","assign","regexp","getParams","len","decodeURIComponent","draftRoutes","finalRoutes","routeLength","matcher","finalPathname","strMatches","module_1","module","getModule","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","d","definition","o","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","r","Symbol","toStringTag","require","styles","PreloadType","href","preload","scripts","src","content","attachStatic","app","server","use","req","res","next","console","log","locals","transformResources","manifest","forEach","routes","assets","router"],"mappings":"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","file":"middleware.js","sourcesContent":["/**\n * Tokenize input string.\n */\nfunction lexer(str) {\n    var tokens = [];\n    var i = 0;\n    while (i < str.length) {\n        var char = str[i];\n        if (char === \"*\" || char === \"+\" || char === \"?\") {\n            tokens.push({ type: \"MODIFIER\", index: i, value: str[i++] });\n            continue;\n        }\n        if (char === \"\\\\\") {\n            tokens.push({ type: \"ESCAPED_CHAR\", index: i++, value: str[i++] });\n            continue;\n        }\n        if (char === \"{\") {\n            tokens.push({ type: \"OPEN\", index: i, value: str[i++] });\n            continue;\n        }\n        if (char === \"}\") {\n            tokens.push({ type: \"CLOSE\", index: i, value: str[i++] });\n            continue;\n        }\n        if (char === \":\") {\n            var name = \"\";\n            var j = i + 1;\n            while (j < str.length) {\n                var code = str.charCodeAt(j);\n                if (\n                // `0-9`\n                (code >= 48 && code <= 57) ||\n                    // `A-Z`\n                    (code >= 65 && code <= 90) ||\n                    // `a-z`\n                    (code >= 97 && code <= 122) ||\n                    // `_`\n                    code === 95) {\n                    name += str[j++];\n                    continue;\n                }\n                break;\n            }\n            if (!name)\n                throw new TypeError(\"Missing parameter name at \" + i);\n            tokens.push({ type: \"NAME\", index: i, value: name });\n            i = j;\n            continue;\n        }\n        if (char === \"(\") {\n            var count = 1;\n            var pattern = \"\";\n            var j = i + 1;\n            if (str[j] === \"?\") {\n                throw new TypeError(\"Pattern cannot start with \\\"?\\\" at \" + j);\n            }\n            while (j < str.length) {\n                if (str[j] === \"\\\\\") {\n                    pattern += str[j++] + str[j++];\n                    continue;\n                }\n                if (str[j] === \")\") {\n                    count--;\n                    if (count === 0) {\n                        j++;\n                        break;\n                    }\n                }\n                else if (str[j] === \"(\") {\n                    count++;\n                    if (str[j + 1] !== \"?\") {\n                        throw new TypeError(\"Capturing groups are not allowed at \" + j);\n                    }\n                }\n                pattern += str[j++];\n            }\n            if (count)\n                throw new TypeError(\"Unbalanced pattern at \" + i);\n            if (!pattern)\n                throw new TypeError(\"Missing pattern at \" + i);\n            tokens.push({ type: \"PATTERN\", index: i, value: pattern });\n            i = j;\n            continue;\n        }\n        tokens.push({ type: \"CHAR\", index: i, value: str[i++] });\n    }\n    tokens.push({ type: \"END\", index: i, value: \"\" });\n    return tokens;\n}\n/**\n * Parse a string for the raw tokens.\n */\nexport function parse(str, options) {\n    if (options === void 0) { options = {}; }\n    var tokens = lexer(str);\n    var _a = options.prefixes, prefixes = _a === void 0 ? \"./\" : _a;\n    var defaultPattern = \"[^\" + escapeString(options.delimiter || \"/#?\") + \"]+?\";\n    var result = [];\n    var key = 0;\n    var i = 0;\n    var path = \"\";\n    var tryConsume = function (type) {\n        if (i < tokens.length && tokens[i].type === type)\n            return tokens[i++].value;\n    };\n    var mustConsume = function (type) {\n        var value = tryConsume(type);\n        if (value !== undefined)\n            return value;\n        var _a = tokens[i], nextType = _a.type, index = _a.index;\n        throw new TypeError(\"Unexpected \" + nextType + \" at \" + index + \", expected \" + type);\n    };\n    var consumeText = function () {\n        var result = \"\";\n        var value;\n        // tslint:disable-next-line\n        while ((value = tryConsume(\"CHAR\") || tryConsume(\"ESCAPED_CHAR\"))) {\n            result += value;\n        }\n        return result;\n    };\n    while (i < tokens.length) {\n        var char = tryConsume(\"CHAR\");\n        var name = tryConsume(\"NAME\");\n        var pattern = tryConsume(\"PATTERN\");\n        if (name || pattern) {\n            var prefix = char || \"\";\n            if (prefixes.indexOf(prefix) === -1) {\n                path += prefix;\n                prefix = \"\";\n            }\n            if (path) {\n                result.push(path);\n                path = \"\";\n            }\n            result.push({\n                name: name || key++,\n                prefix: prefix,\n                suffix: \"\",\n                pattern: pattern || defaultPattern,\n                modifier: tryConsume(\"MODIFIER\") || \"\"\n            });\n            continue;\n        }\n        var value = char || tryConsume(\"ESCAPED_CHAR\");\n        if (value) {\n            path += value;\n            continue;\n        }\n        if (path) {\n            result.push(path);\n            path = \"\";\n        }\n        var open = tryConsume(\"OPEN\");\n        if (open) {\n            var prefix = consumeText();\n            var name_1 = tryConsume(\"NAME\") || \"\";\n            var pattern_1 = tryConsume(\"PATTERN\") || \"\";\n            var suffix = consumeText();\n            mustConsume(\"CLOSE\");\n            result.push({\n                name: name_1 || (pattern_1 ? key++ : \"\"),\n                pattern: name_1 && !pattern_1 ? defaultPattern : pattern_1,\n                prefix: prefix,\n                suffix: suffix,\n                modifier: tryConsume(\"MODIFIER\") || \"\"\n            });\n            continue;\n        }\n        mustConsume(\"END\");\n    }\n    return result;\n}\n/**\n * Compile a string to a template function for the path.\n */\nexport function compile(str, options) {\n    return tokensToFunction(parse(str, options), options);\n}\n/**\n * Expose a method for transforming tokens into the path function.\n */\nexport function tokensToFunction(tokens, options) {\n    if (options === void 0) { options = {}; }\n    var reFlags = flags(options);\n    var _a = options.encode, encode = _a === void 0 ? function (x) { return x; } : _a, _b = options.validate, validate = _b === void 0 ? true : _b;\n    // Compile all the tokens into regexps.\n    var matches = tokens.map(function (token) {\n        if (typeof token === \"object\") {\n            return new RegExp(\"^(?:\" + token.pattern + \")$\", reFlags);\n        }\n    });\n    return function (data) {\n        var path = \"\";\n        for (var i = 0; i < tokens.length; i++) {\n            var token = tokens[i];\n            if (typeof token === \"string\") {\n                path += token;\n                continue;\n            }\n            var value = data ? data[token.name] : undefined;\n            var optional = token.modifier === \"?\" || token.modifier === \"*\";\n            var repeat = token.modifier === \"*\" || token.modifier === \"+\";\n            if (Array.isArray(value)) {\n                if (!repeat) {\n                    throw new TypeError(\"Expected \\\"\" + token.name + \"\\\" to not repeat, but got an array\");\n                }\n                if (value.length === 0) {\n                    if (optional)\n                        continue;\n                    throw new TypeError(\"Expected \\\"\" + token.name + \"\\\" to not be empty\");\n                }\n                for (var j = 0; j < value.length; j++) {\n                    var segment = encode(value[j], token);\n                    if (validate && !matches[i].test(segment)) {\n                        throw new TypeError(\"Expected all \\\"\" + token.name + \"\\\" to match \\\"\" + token.pattern + \"\\\", but got \\\"\" + segment + \"\\\"\");\n                    }\n                    path += token.prefix + segment + token.suffix;\n                }\n                continue;\n            }\n            if (typeof value === \"string\" || typeof value === \"number\") {\n                var segment = encode(String(value), token);\n                if (validate && !matches[i].test(segment)) {\n                    throw new TypeError(\"Expected \\\"\" + token.name + \"\\\" to match \\\"\" + token.pattern + \"\\\", but got \\\"\" + segment + \"\\\"\");\n                }\n                path += token.prefix + segment + token.suffix;\n                continue;\n            }\n            if (optional)\n                continue;\n            var typeOfMessage = repeat ? \"an array\" : \"a string\";\n            throw new TypeError(\"Expected \\\"\" + token.name + \"\\\" to be \" + typeOfMessage);\n        }\n        return path;\n    };\n}\n/**\n * Create path match function from `path-to-regexp` spec.\n */\nexport function match(str, options) {\n    var keys = [];\n    var re = pathToRegexp(str, keys, options);\n    return regexpToFunction(re, keys, options);\n}\n/**\n * Create a path match function from `path-to-regexp` output.\n */\nexport function regexpToFunction(re, keys, options) {\n    if (options === void 0) { options = {}; }\n    var _a = options.decode, decode = _a === void 0 ? function (x) { return x; } : _a;\n    return function (pathname) {\n        var m = re.exec(pathname);\n        if (!m)\n            return false;\n        var path = m[0], index = m.index;\n        var params = Object.create(null);\n        var _loop_1 = function (i) {\n            // tslint:disable-next-line\n            if (m[i] === undefined)\n                return \"continue\";\n            var key = keys[i - 1];\n            if (key.modifier === \"*\" || key.modifier === \"+\") {\n                params[key.name] = m[i].split(key.prefix + key.suffix).map(function (value) {\n                    return decode(value, key);\n                });\n            }\n            else {\n                params[key.name] = decode(m[i], key);\n            }\n        };\n        for (var i = 1; i < m.length; i++) {\n            _loop_1(i);\n        }\n        return { path: path, index: index, params: params };\n    };\n}\n/**\n * Escape a regular expression string.\n */\nfunction escapeString(str) {\n    return str.replace(/([.+*?=^!:${}()[\\]|/\\\\])/g, \"\\\\$1\");\n}\n/**\n * Get the flags for a regexp from the options.\n */\nfunction flags(options) {\n    return options && options.sensitive ? \"\" : \"i\";\n}\n/**\n * Pull out keys from a regexp.\n */\nfunction regexpToRegexp(path, keys) {\n    if (!keys)\n        return path;\n    var groupsRegex = /\\((?:\\?<(.*?)>)?(?!\\?)/g;\n    var index = 0;\n    var execResult = groupsRegex.exec(path.source);\n    while (execResult) {\n        keys.push({\n            // Use parenthesized substring match if available, index otherwise\n            name: execResult[1] || index++,\n            prefix: \"\",\n            suffix: \"\",\n            modifier: \"\",\n            pattern: \"\"\n        });\n        execResult = groupsRegex.exec(path.source);\n    }\n    return path;\n}\n/**\n * Transform an array into a regexp.\n */\nfunction arrayToRegexp(paths, keys, options) {\n    var parts = paths.map(function (path) { return pathToRegexp(path, keys, options).source; });\n    return new RegExp(\"(?:\" + parts.join(\"|\") + \")\", flags(options));\n}\n/**\n * Create a path regexp from string input.\n */\nfunction stringToRegexp(path, keys, options) {\n    return tokensToRegexp(parse(path, options), keys, options);\n}\n/**\n * Expose a function for taking tokens and returning a RegExp.\n */\nexport function tokensToRegexp(tokens, keys, options) {\n    if (options === void 0) { options = {}; }\n    var _a = options.strict, strict = _a === void 0 ? false : _a, _b = options.start, start = _b === void 0 ? true : _b, _c = options.end, end = _c === void 0 ? true : _c, _d = options.encode, encode = _d === void 0 ? function (x) { return x; } : _d;\n    var endsWith = \"[\" + escapeString(options.endsWith || \"\") + \"]|$\";\n    var delimiter = \"[\" + escapeString(options.delimiter || \"/#?\") + \"]\";\n    var route = start ? \"^\" : \"\";\n    // Iterate over the tokens and create our regexp string.\n    for (var _i = 0, tokens_1 = tokens; _i < tokens_1.length; _i++) {\n        var token = tokens_1[_i];\n        if (typeof token === \"string\") {\n            route += escapeString(encode(token));\n        }\n        else {\n            var prefix = escapeString(encode(token.prefix));\n            var suffix = escapeString(encode(token.suffix));\n            if (token.pattern) {\n                if (keys)\n                    keys.push(token);\n                if (prefix || suffix) {\n                    if (token.modifier === \"+\" || token.modifier === \"*\") {\n                        var mod = token.modifier === \"*\" ? \"?\" : \"\";\n                        route += \"(?:\" + prefix + \"((?:\" + token.pattern + \")(?:\" + suffix + prefix + \"(?:\" + token.pattern + \"))*)\" + suffix + \")\" + mod;\n                    }\n                    else {\n                        route += \"(?:\" + prefix + \"(\" + token.pattern + \")\" + suffix + \")\" + token.modifier;\n                    }\n                }\n                else {\n                    route += \"(\" + token.pattern + \")\" + token.modifier;\n                }\n            }\n            else {\n                route += \"(?:\" + prefix + suffix + \")\" + token.modifier;\n            }\n        }\n    }\n    if (end) {\n        if (!strict)\n            route += delimiter + \"?\";\n        route += !options.endsWith ? \"$\" : \"(?=\" + endsWith + \")\";\n    }\n    else {\n        var endToken = tokens[tokens.length - 1];\n        var isEndDelimited = typeof endToken === \"string\"\n            ? delimiter.indexOf(endToken[endToken.length - 1]) > -1\n            : // tslint:disable-next-line\n                endToken === undefined;\n        if (!strict) {\n            route += \"(?:\" + delimiter + \"(?=\" + endsWith + \"))?\";\n        }\n        if (!isEndDelimited) {\n            route += \"(?=\" + delimiter + \"|\" + endsWith + \")\";\n        }\n    }\n    return new RegExp(route, flags(options));\n}\n/**\n * Normalize the given path string, returning a regular expression.\n *\n * An empty array can be passed in for the keys, which will hold the\n * placeholder key descriptions. For example, using `/user/:id`, `keys` will\n * contain `[{ name: 'id', delimiter: '/', optional: false, repeat: false }]`.\n */\nexport function pathToRegexp(path, keys, options) {\n    if (path instanceof RegExp)\n        return regexpToRegexp(path, keys);\n    if (Array.isArray(path))\n        return arrayToRegexp(path, keys, options);\n    return stringToRegexp(path, keys, options);\n}\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createRouter = void 0;\nvar path_to_regexp_1 = require(\"path-to-regexp\");\nfunction createRouter(draftRoutes) {\n    var matcher = createMatcher(draftRoutes);\n    function getModule(path) {\n        var matches = matcher(path || '/');\n        if (matches === null) {\n            return null;\n        }\n        else {\n            return matches;\n        }\n    }\n    return function (path) {\n        return getModule(path);\n    };\n}\nexports.createRouter = createRouter;\nfunction createMatcher(routes) {\n    var finalRoutes = routes.map(createRoute);\n    var routeLength = finalRoutes.length;\n    var matcher = function (pathname) {\n        var finalPathname = cleanPath(pathname);\n        for (var i = 0; i < routeLength; i++) {\n            var route = finalRoutes[i];\n            var strMatches = route.regexp.exec(finalPathname);\n            if (!strMatches) {\n                continue;\n            }\n            var params = getParams(strMatches, route.keys);\n            var module_1 = route.module;\n            return {\n                path: route.path,\n                params: params,\n                module: module_1,\n            };\n        }\n        return null;\n    };\n    return matcher;\n}\nfunction createRoute(route) {\n    var finalRoute = Object.assign({}, route);\n    finalRoute.keys = [];\n    var keys = finalRoute.keys;\n    var regexp = path_to_regexp_1.pathToRegexp(finalRoute.path, keys);\n    var intactRoute = Object.assign({ keys: keys, regexp: regexp }, finalRoute);\n    return intactRoute;\n}\nfunction getParams(matches, keys) {\n    var params = {};\n    for (var i = 1, len = matches.length; i < len; i++) {\n        var key = keys[i - 1];\n        if (key) {\n            if (typeof matches[i] === 'string') {\n                params[key.name] = decodeURIComponent(matches[i]);\n            }\n            else {\n                params[key.name] = matches[i];\n            }\n        }\n    }\n    return params;\n}\nfunction cleanPath(path) {\n    return path.replace(/\\/\\//g, '/');\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"react-torch\");;","import { PreloadType } from 'react-torch'\nimport type { Middleware, StylePreload, ScriptPreload } from 'react-torch'\n\nconst styles: StylePreload[] = [\n  {\n    type: PreloadType.Link,\n    href: '/css/base.css',\n    preload: true,\n  },\n]\n\nconst scripts: ScriptPreload[] = [\n  {\n    type: PreloadType.Link,\n    src: 'https://www.googletagmanager.com/gtag/js?id=UA-178762043-1',\n  },\n  {\n    type: PreloadType.Inner,\n    content: `\n      window.dataLayer = window.dataLayer || [];\n      function gtag(){dataLayer.push(arguments);}\n      gtag('js', new Date());\n    \n      gtag('config', 'UA-178762043-1');\n    `,\n  },\n]\n\nexport const attachStatic: Middleware = (app, server) => {\n  app.use((req, res, next) => {\n    console.log(req.path)\n    res.locals = {\n      styles,\n      scripts,\n    }\n    next()\n  })\n}\n","import { createRouter } from 'torch-router'\nimport { PreloadType } from 'react-torch'\nimport type { Middleware, ScriptPreload, StylePreload } from 'react-torch'\nimport type { DraftRoute } from 'torch-router'\n\nconst transformResources = (name: string): ResourcesTransform => {\n  const regexp = new RegExp(`${name}.css`)\n  return ({ styles, scripts }, manifest) => {\n    Object.keys(manifest).forEach((key) => {\n      if (regexp.test(key)) {\n        styles = [\n          ...styles,\n          {\n            type: PreloadType.Link,\n            href: manifest[key],\n            preload: true,\n          },\n        ]\n      }\n    })\n\n    return {\n      styles,\n      scripts,\n    }\n  }\n}\n\ntype Resources = {\n  styles: StylePreload[]\n  scripts: ScriptPreload[]\n}\n\ntype ResourcesTransform = (\n  resources: Resources,\n  assets: Record<string, string>\n) => Resources\n\nconst routes: DraftRoute<ResourcesTransform>[] = [\n  {\n    path: '/',\n    module: transformResources('home'),\n  },\n  {\n    path: '/photography',\n    module: transformResources('photography'),\n  },\n  {\n    path: ['/notes', '/notes/tags/:tagName'],\n    module: transformResources('notes'),\n  },\n  {\n    path: '/notes/tags',\n    module: transformResources('tags'),\n  },\n  {\n    path: '/notes/:noteName',\n    module: transformResources('note'),\n  },\n  {\n    path: '/games',\n    module: transformResources('games'),\n  },\n  {\n    path: '/:path*',\n    module: transformResources('notfound'),\n  },\n]\n\nexport const assets: Middleware = (app, server) => {\n  const router = createRouter(routes)\n\n  app.use((req, res, next) => {\n    console.log(req.path)\n    const matches = router(req.path)\n\n    if (matches) {\n      const { scripts, styles } = matches.module(\n        {\n          styles: res.locals.styles,\n          scripts: res.locals.scripts,\n        },\n        res.locals.assets\n      )\n      res.locals.styles = styles\n      res.locals.scripts = scripts\n    }\n\n    next()\n  })\n}\n"],"sourceRoot":""}